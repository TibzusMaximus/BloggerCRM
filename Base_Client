"""
База данных клиентов
"""

from __future__ import annotations
from sqlalchemy import BigInteger, SmallInteger, Text, Numeric, UniqueConstraint
from sqlalchemy.orm import DeclarativeBase, Mapped, mapped_column


class Base(DeclarativeBase):
    """Базовый класс для моделей SQLAlchemy"""
    pass


class Client(Base):
    """
    Модель таблицы clients.
    Хранит данные о клиентах CRM-системы.
    """
    __tablename__ = "clients"
    __table_args__ = (
        UniqueConstraint("inn_client", name="uq_clients_inn"),
        UniqueConstraint("ogrn_client", name="uq_clients_ogrn"),
    )

    client_id: Mapped[int] = mapped_column(BigInteger, primary_key=True, autoincrement=True)

    inn_client: Mapped[str] = mapped_column(Text, nullable=False)         # ИНН (текст)
    ogrn_client: Mapped[int] = mapped_column(BigInteger, nullable=False)  # ОГРН
    kpp_client: Mapped[int | None] = mapped_column(BigInteger)            # КПП

    name_client: Mapped[str] = mapped_column(Text, nullable=False)        # Название клиента
    form_client: Mapped[int | None] = mapped_column(SmallInteger)         # Форма (код ОПФ)

    bank_client: Mapped[str | None] = mapped_column(Text)                 # Банк
    korakk_client: Mapped[int | None] = mapped_column(Numeric(20, 0))     # Корр. счёт
    bankakk_client: Mapped[int | None] = mapped_column(Numeric(20, 0))    # Расчётный счёт
    bik_client: Mapped[int | None] = mapped_column(BigInteger)            # БИК

    phone_client: Mapped[str | None] = mapped_column(Text)                # Телефон
    mail_client: Mapped[str | None] = mapped_column(Text)                 # Email
    social_client: Mapped[str | None] = mapped_column(Text)               # Соцсети / сайт

    def __repr__(self) -> str:
        return f"<Client id={self.client_id} name={self.name_client!r} inn={self.inn_client!r}>"
