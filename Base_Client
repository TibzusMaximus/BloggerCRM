
from sqlalchemy import (
    BigInteger, SmallInteger, Text, Numeric,
    Column, UniqueConstraint
)
from sqlalchemy.orm import DeclarativeBase, Mapped, mapped_column

class Base(DeclarativeBase):
    pass

class Client(Base):
    __tablename__ = "clients"
    __table_args__ = (
        UniqueConstraint("inn_client", name="uq_clients_inn"),
        UniqueConstraint("ogrn_client", name="uq_clients_ogrn"),
    )

    client_id: Mapped[int] = mapped_column(BigInteger, primary_key=True, autoincrement=True)

    inn_client: Mapped[str] = mapped_column(Text, nullable=False)   # ИНН как текст
    ogrn_client: Mapped[int] = mapped_column(BigInteger, nullable=False)
    kpp_client: Mapped[int | None] = mapped_column(BigInteger)

    name_client: Mapped[str] = mapped_column(Text, nullable=False)
    form_client: Mapped[int | None] = mapped_column(SmallInteger)

    bank_client: Mapped[str | None] = mapped_column(Text)
    korakk_client: Mapped[int | None] = mapped_column(Numeric(20, 0))
    bankakk_client: Mapped[int | None] = mapped_column(Numeric(20, 0))
    bik_client: Mapped[int | None] = mapped_column(BigInteger)

    phone_client: Mapped[str | None] = mapped_column(Text)          # телефон как текст
    mail_client: Mapped[str | None] = mapped_column(Text)
    social_client: Mapped[str | None] = mapped_column(Text)

    def __repr__(self) -> str:
        return f"<Client id={self.client_id} name={self.name_client!r} inn={self.inn_client!r}>"
